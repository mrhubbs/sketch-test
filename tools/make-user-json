#!/usr/bin/env node

// Creates a user.json file if one does not exist in the given directory.
// Expects argument 1 to be an absolute path to the unzipped sketch file.

// usage:
// make-user-json /home/user/path/thing/somewhere/ouch/_unzipped/some-file-name.sketch

const path = require('path')
const jetpack = require('fs-jetpack')

if (process.argv.length !== 3) {
  console.log("make-user-json: Need path and only path!")
  process.exit(1)
}

const workingPath = process.argv[2]

const userJsonExists = () => jetpack.exists(path.join(workingPath, 'user.json')) === 'file'

// get the first page ID from the meta.json file
const getFirstPageId = () => {
  metaPath = path.join(workingPath, 'meta.json')

  meta = JSON.parse(jetpack.read(metaPath))
  pagesAndArtboards = Object.keys(meta['pagesAndArtboards'])

  if (pagesAndArtboards.length < 1) {
    console.log('make-user-json: meta.json has no pages!')
    process.exit(1)
  }

  return pagesAndArtboards[0]
}

// make the user.json file and write it to disk
const createUserJson = (pageId) => {
  const data = {
    document: {
      pageListHeight: -1
    },
    [pageId]: {
      scrollOrigin: "{0, 0}",
      zoomValue: 1
    }
  }

  jetpack.write(
    path.join(workingPath, 'user.json'),
    JSON.stringify(data, null, 2)
  )
}

if (!userJsonExists()) {
  // The first thing we need to do is extract the ID of the first page.
  // We'll grab this from the meta.json file.
  pageId = getFirstPageId()

  // create the file
  console.log(`making user.json: page ID = ${pageId}`)
  createUserJson(pageId)
}
